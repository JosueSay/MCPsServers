{"time": "2025-09-10T16:08:37.057992", "direction": "send", "data": {"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {}}}
{"time": "2025-09-10T16:08:38.026136", "direction": "recv", "data": {"jsonrpc": "2.0", "id": 1, "result": {"protocolVersion": "2025-06-18", "serverInfo": {"name": "fel-stdio", "version": "0.1.0"}, "capabilities": {"tools": {"listChanged": true}}}}}
{"time": "2025-09-10T16:08:38.028420", "direction": "send", "data": {"jsonrpc": "2.0", "id": 2, "method": "tools/list"}}
{"time": "2025-09-10T16:08:38.034824", "direction": "recv", "data": {"jsonrpc": "2.0", "id": 2, "result": {"tools": [{"name": "fel_validate", "description": "Validate FEL XML totals (subtotal, VAT 12%, total) and required fields.", "inputSchema": {"type": "object", "properties": {"xml_path": {"type": "string"}}, "required": ["xml_path"]}}, {"name": "fel_render", "description": "Render branded PDF from FEL XML.", "inputSchema": {"type": "object", "properties": {"xml_path": {"type": "string"}, "logo_path": {"type": ["string", "null"]}, "theme": {"type": ["string", "null"]}, "out_path": {"type": "string"}}, "required": ["xml_path", "out_path"]}}, {"name": "fel_batch", "description": "Render a directory of FEL XMLs; outputs manifest.json", "inputSchema": {"type": "object", "properties": {"dir_xml": {"type": "string"}, "out_dir": {"type": "string"}}, "required": ["dir_xml", "out_dir"]}}]}}}
{"time": "2025-09-10T16:08:38.050749", "direction": "send", "data": {"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {}}}
{"time": "2025-09-10T16:08:42.421379", "direction": "recv", "data": {"jsonrpc": "2.0", "id": 1, "error": {"code": -32603, "message": "[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"protocolVersion\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"object\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"capabilities\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"object\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"clientInfo\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}}
{"time": "2025-09-10T16:08:42.423293", "direction": "send", "data": {"jsonrpc": "2.0", "id": 2, "method": "tools/list"}}
{"time": "2025-09-10T16:08:42.432576", "direction": "recv", "data": {"result": {"tools": [{"name": "read_file", "description": "Read the complete contents of a file as text. DEPRECATED: Use read_text_file instead.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_text_file", "description": "Read the complete contents of a file from the file system as text. Handles various text encodings and provides detailed error messages if the file cannot be read. Use this tool when you need to examine the contents of a single file. Use the 'head' parameter to read only the first N lines of a file, or the 'tail' parameter to read only the last N lines of a file. Operates on the file as text regardless of extension. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "tail": {"type": "number", "description": "If provided, returns only the last N lines of the file"}, "head": {"type": "number", "description": "If provided, returns only the first N lines of the file"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_media_file", "description": "Read an image or audio file. Returns the base64 encoded data and MIME type. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "read_multiple_files", "description": "Read the contents of multiple files simultaneously. This is more efficient than reading files one by one when you need to analyze or compare multiple files. Each file's content is returned with its path as a reference. Failed reads for individual files won't stop the entire operation. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"paths": {"type": "array", "items": {"type": "string"}}}, "required": ["paths"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "write_file", "description": "Create a new file or completely overwrite an existing file with new content. Use with caution as it will overwrite existing files without warning. Handles text content with proper encoding. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "edit_file", "description": "Make line-based edits to a text file. Each edit replaces exact line sequences with new content. Returns a git-style diff showing the changes made. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "edits": {"type": "array", "items": {"type": "object", "properties": {"oldText": {"type": "string", "description": "Text to search for - must match exactly"}, "newText": {"type": "string", "description": "Text to replace with"}}, "required": ["oldText", "newText"], "additionalProperties": false}}, "dryRun": {"type": "boolean", "default": false, "description": "Preview changes using git-style diff format"}}, "required": ["path", "edits"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_directory", "description": "Create a new directory or ensure a directory exists. Can create multiple nested directories in one operation. If the directory already exists, this operation will succeed silently. Perfect for setting up directory structures for projects or ensuring required paths exist. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory", "description": "Get a detailed listing of all files and directories in a specified path. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is essential for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_directory_with_sizes", "description": "Get a detailed listing of all files and directories in a specified path, including sizes. Results clearly distinguish between files and directories with [FILE] and [DIR] prefixes. This tool is useful for understanding directory structure and finding specific files within a directory. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "sortBy": {"type": "string", "enum": ["name", "size"], "default": "name", "description": "Sort entries by name or size"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "directory_tree", "description": "Get a recursive tree view of files and directories as a JSON structure. Each entry includes 'name', 'type' (file/directory), and 'children' for directories. Files have no children array, while directories always have a children array (which may be empty). The output is formatted with 2-space indentation for readability. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "move_file", "description": "Move or rename files and directories. Can move files between directories and rename them in a single operation. If the destination exists, the operation will fail. Works across different directories and can be used for simple renaming within the same directory. Both source and destination must be within allowed directories.", "inputSchema": {"type": "object", "properties": {"source": {"type": "string"}, "destination": {"type": "string"}}, "required": ["source", "destination"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_files", "description": "Recursively search for files and directories matching a pattern. Searches through all subdirectories from the starting path. The search is case-insensitive and matches partial names. Returns full paths to all matching items. Great for finding files when you don't know their exact location. Only searches within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}, "pattern": {"type": "string"}, "excludePatterns": {"type": "array", "items": {"type": "string"}, "default": []}}, "required": ["path", "pattern"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_info", "description": "Retrieve detailed metadata about a file or directory. Returns comprehensive information including size, creation time, last modified time, permissions, and type. This tool is perfect for understanding file characteristics without reading the actual content. Only works within allowed directories.", "inputSchema": {"type": "object", "properties": {"path": {"type": "string"}}, "required": ["path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_allowed_directories", "description": "Returns the list of directories that this server is allowed to access. Subdirectories within these allowed directories are also accessible. Use this to understand which directories and their nested paths are available before trying to access files.", "inputSchema": {"type": "object", "properties": {}, "required": []}}]}, "jsonrpc": "2.0", "id": 2}}
{"time": "2025-09-10T16:08:42.440259", "direction": "send", "data": {"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {}}}
{"time": "2025-09-10T16:08:45.611530", "direction": "recv", "data": {"jsonrpc": "2.0", "id": 1, "error": {"code": -32603, "message": "[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"protocolVersion\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"object\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"capabilities\"\n    ],\n    \"message\": \"Required\"\n  },\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"object\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"params\",\n      \"clientInfo\"\n    ],\n    \"message\": \"Required\"\n  }\n]"}}}
{"time": "2025-09-10T16:08:45.616262", "direction": "send", "data": {"jsonrpc": "2.0", "id": 2, "method": "tools/list"}}
{"time": "2025-09-10T16:08:45.626529", "direction": "recv", "data": {"result": {"tools": [{"name": "create_or_update_file", "description": "Create or update a single file in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path where to create/update the file"}, "content": {"type": "string", "description": "Content of the file"}, "message": {"type": "string", "description": "Commit message"}, "branch": {"type": "string", "description": "Branch to create/update the file in"}, "sha": {"type": "string", "description": "SHA of the file being replaced (required when updating existing files)"}}, "required": ["owner", "repo", "path", "content", "message", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_repositories", "description": "Search for GitHub repositories", "inputSchema": {"type": "object", "properties": {"query": {"type": "string", "description": "Search query (see GitHub search syntax)"}, "page": {"type": "number", "description": "Page number for pagination (default: 1)"}, "perPage": {"type": "number", "description": "Number of results per page (default: 30, max: 100)"}}, "required": ["query"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_repository", "description": "Create a new GitHub repository in your account", "inputSchema": {"type": "object", "properties": {"name": {"type": "string", "description": "Repository name"}, "description": {"type": "string", "description": "Repository description"}, "private": {"type": "boolean", "description": "Whether the repository should be private"}, "autoInit": {"type": "boolean", "description": "Initialize with README.md"}}, "required": ["name"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_file_contents", "description": "Get the contents of a file or directory from a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "path": {"type": "string", "description": "Path to the file or directory"}, "branch": {"type": "string", "description": "Branch to get contents from"}}, "required": ["owner", "repo", "path"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "push_files", "description": "Push multiple files to a GitHub repository in a single commit", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Branch to push to (e.g., 'main' or 'master')"}, "files": {"type": "array", "items": {"type": "object", "properties": {"path": {"type": "string"}, "content": {"type": "string"}}, "required": ["path", "content"], "additionalProperties": false}, "description": "Array of files to push"}, "message": {"type": "string", "description": "Commit message"}}, "required": ["owner", "repo", "branch", "files", "message"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_issue", "description": "Create a new issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}}, "required": ["owner", "repo", "title"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request", "description": "Create a new pull request in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "title": {"type": "string", "description": "Pull request title"}, "body": {"type": "string", "description": "Pull request body/description"}, "head": {"type": "string", "description": "The name of the branch where your changes are implemented"}, "base": {"type": "string", "description": "The name of the branch you want the changes pulled into"}, "draft": {"type": "boolean", "description": "Whether to create the pull request as a draft"}, "maintainer_can_modify": {"type": "boolean", "description": "Whether maintainers can modify the pull request"}}, "required": ["owner", "repo", "title", "head", "base"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "fork_repository", "description": "Fork a GitHub repository to your account or specified organization", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "organization": {"type": "string", "description": "Optional: organization to fork to (defaults to your personal account)"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_branch", "description": "Create a new branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "branch": {"type": "string", "description": "Name for the new branch"}, "from_branch": {"type": "string", "description": "Optional: source branch to create from (defaults to the repository's default branch)"}}, "required": ["owner", "repo", "branch"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_commits", "description": "Get list of commits of a branch in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "sha": {"type": "string"}, "page": {"type": "number"}, "perPage": {"type": "number"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_issues", "description": "List issues in a GitHub repository with filtering options", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "direction": {"type": "string", "enum": ["asc", "desc"]}, "labels": {"type": "array", "items": {"type": "string"}}, "page": {"type": "number"}, "per_page": {"type": "number"}, "since": {"type": "string"}, "sort": {"type": "string", "enum": ["created", "updated", "comments"]}, "state": {"type": "string", "enum": ["open", "closed", "all"]}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_issue", "description": "Update an existing issue in a GitHub repository", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "title": {"type": "string"}, "body": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "string"}}, "milestone": {"type": "number"}, "labels": {"type": "array", "items": {"type": "string"}}, "state": {"type": "string", "enum": ["open", "closed"]}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "add_issue_comment", "description": "Add a comment to an existing issue", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}, "body": {"type": "string"}}, "required": ["owner", "repo", "issue_number", "body"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_code", "description": "Search for code across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_issues", "description": "Search for issues and pull requests across GitHub repositories", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "search_users", "description": "Search for users on GitHub", "inputSchema": {"type": "object", "properties": {"q": {"type": "string"}, "order": {"type": "string", "enum": ["asc", "desc"]}, "page": {"type": "number", "minimum": 1}, "per_page": {"type": "number", "minimum": 1, "maximum": 100}, "sort": {"type": "string", "enum": ["followers", "repositories", "joined"]}}, "required": ["q"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_issue", "description": "Get details of a specific issue in a GitHub repository.", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string"}, "repo": {"type": "string"}, "issue_number": {"type": "number"}}, "required": ["owner", "repo", "issue_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request", "description": "Get details of a specific pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "list_pull_requests", "description": "List and filter repository pull requests", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "state": {"type": "string", "enum": ["open", "closed", "all"], "description": "State of the pull requests to return"}, "head": {"type": "string", "description": "Filter by head user or head organization and branch name"}, "base": {"type": "string", "description": "Filter by base branch name"}, "sort": {"type": "string", "enum": ["created", "updated", "popularity", "long-running"], "description": "What to sort results by"}, "direction": {"type": "string", "enum": ["asc", "desc"], "description": "The direction of the sort"}, "per_page": {"type": "number", "description": "Results per page (max 100)"}, "page": {"type": "number", "description": "Page number of the results"}}, "required": ["owner", "repo"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "create_pull_request_review", "description": "Create a review on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_id": {"type": "string", "description": "The SHA of the commit that needs a review"}, "body": {"type": "string", "description": "The body text of the review"}, "event": {"type": "string", "enum": ["APPROVE", "REQUEST_CHANGES", "COMMENT"], "description": "The review action to perform"}, "comments": {"type": "array", "items": {"anyOf": [{"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "position": {"type": "number", "description": "The position in the diff where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "position", "body"], "additionalProperties": false}, {"type": "object", "properties": {"path": {"type": "string", "description": "The relative path to the file being commented on"}, "line": {"type": "number", "description": "The line number in the file where you want to add a review comment"}, "body": {"type": "string", "description": "Text of the review comment"}}, "required": ["path", "line", "body"], "additionalProperties": false}]}, "description": "Comments to post as part of the review (specify either position or line, not both)"}}, "required": ["owner", "repo", "pull_number", "body", "event"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "merge_pull_request", "description": "Merge a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "commit_title": {"type": "string", "description": "Title for the automatic commit message"}, "commit_message": {"type": "string", "description": "Extra detail to append to automatic commit message"}, "merge_method": {"type": "string", "enum": ["merge", "squash", "rebase"], "description": "Merge method to use"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_files", "description": "Get the list of files changed in a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_status", "description": "Get the combined status of all status checks for a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "update_pull_request_branch", "description": "Update a pull request branch with the latest changes from the base branch", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}, "expected_head_sha": {"type": "string", "description": "The expected SHA of the pull request's HEAD ref"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_comments", "description": "Get the review comments on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}, {"name": "get_pull_request_reviews", "description": "Get the reviews on a pull request", "inputSchema": {"type": "object", "properties": {"owner": {"type": "string", "description": "Repository owner (username or organization)"}, "repo": {"type": "string", "description": "Repository name"}, "pull_number": {"type": "number", "description": "Pull request number"}}, "required": ["owner", "repo", "pull_number"], "additionalProperties": false, "$schema": "http://json-schema.org/draft-07/schema#"}}]}, "jsonrpc": "2.0", "id": 2}}
{"time": "2025-09-10T16:08:45.628527", "direction": "send", "data": {"jsonrpc": "2.0", "id": "b38f4203-2d62-4d14-ba5c-b0c30aa09ecc", "method": "tools/list"}}
{"time": "2025-09-10T16:08:45.952347", "direction": "recv", "data": {"jsonrpc": "2.0", "id": "b38f4203-2d62-4d14-ba5c-b0c30aa09ecc", "result": {"tools": [{"name": "ow_get_player_summary", "description": "Get player stats summary (winrate, kda, damage, healing). platform/gamemode optional.", "inputSchema": {"type": "object", "properties": {"playerId": {"type": "string"}, "platform": {"type": ["string", "null"], "enum": [null, "pc", "xbl", "psn", "nintendo"]}, "gamemode": {"type": ["string", "null"], "enum": [null, "quickplay", "competitive"]}}, "required": ["playerId"]}}, {"name": "ow_get_player_stats", "description": "Get player career-like stats WITH labels. Requires platform and gamemode. Optional hero.", "inputSchema": {"type": "object", "properties": {"playerId": {"type": "string"}, "platform": {"type": "string", "enum": ["pc", "xbl", "psn", "nintendo"]}, "gamemode": {"type": "string", "enum": ["quickplay", "competitive"]}, "hero": {"type": ["string", "null"]}}, "required": ["playerId", "platform", "gamemode"]}}]}}}
{"time": "2025-09-10T16:09:18.191305", "direction": "send", "data": {"jsonrpc": "2.0", "id": "c8c55388-b604-45ec-9b57-758e68c611bf", "method": "tools/call", "params": {"name": "ow_get_player_summary", "arguments": {"playerId": "YSE#11202", "platform": "pc"}}}}
{"time": "2025-09-10T16:09:19.402300", "direction": "recv", "data": {"jsonrpc": "2.0", "id": "c8c55388-b604-45ec-9b57-758e68c611bf", "result": {"content": [{"type": "text", "text": "{\"ok\": true, \"endpoint\": \"summary\", \"playerId\": \"YSE#11202\", \"data\": {\"general\": {\"games_played\": 4263, \"games_won\": 2251, \"games_lost\": 2012, \"time_played\": 2188846, \"winrate\": 52.8, \"kda\": 3.03, \"total\": {\"eliminations\": 54980, \"assists\": 8563, \"deaths\": 20999, \"damage\": 30755654, \"healing\": 9527277}, \"average\": {\"eliminations\": 15.07, \"assists\": 2.35, \"deaths\": 5.76, \"damage\": 8430.65, \"healing\": 2611.59}}, \"roles\": {\"tank\": {\"games_played\": 1699, \"games_won\": 881, \"games_lost\": 818, \"time_played\": 885913, \"winrate\": 51.85, \"kda\": 3.27, \"total\": {\"eliminations\": 25646, \"assists\": 2705, \"deaths\": 8679, \"damage\": 15272376, \"healing\": 860290}, \"average\": {\"eliminations\": 17.37, \"assists\": 1.83, \"deaths\": 5.88, \"damage\": 10343.48, \"healing\": 582.65}}, \"damage\": {\"games_played\": 1241, \"games_won\": 663, \"games_lost\": 578, \"time_played\": 628324, \"winrate\": 53.42, \"kda\": 3.08, \"total\": {\"eliminations\": 17629, \"assists\": 1065, \"deaths\": 6071, \"damage\": 10921108, \"healing\": 289503}, \"average\": {\"eliminations\": 16.83, \"assists\": 1.02, \"deaths\": 5.8, \"damage\": 10428.8, \"healing\": 276.45}}, \"support\": {\"games_played\": 1323, \"games_won\": 707, \"games_lost\": 616, \"time_played\": 674609, \"winrate\": 53.44, \"kda\": 2.64, \"total\": {\"eliminations\": 11705, \"assists\": 4793, \"deaths\": 6249, \"damage\": 4562170, \"healing\": 8377484}, \"average\": {\"eliminations\": 10.41, \"assists\": 4.26, \"deaths\": 5.56, \"damage\": 4057.61, \"healing\": 7450.97}}}, \"heroes\": {\"ana\": {\"games_played\": 168, \"games_won\": 72, \"games_lost\": 96, \"time_played\": 84575, \"winrate\": 42.86, \"kda\": 2.7, \"total\": {\"eliminations\": 1245, \"assists\": 786, \"deaths\": 753, \"damage\": 530359, \"healing\": 876528}, \"average\": {\"eliminations\": 8.83, \"assists\": 5.58, \"deaths\": 5.34, \"damage\": 3762.52, \"healing\": 6218.35}}, \"ashe\": {\"games_played\": 84, \"games_won\": 35, \"games_lost\": 49, \"time_played\": 37786, \"winrate\": 41.67, \"kda\": 2.54, \"total\": {\"eliminations\": 860, \"assists\": 0, \"deaths\": 339, \"damage\": 621572, \"healing\": 0}, \"average\": {\"eliminations\": 13.66, \"assists\": 0.0, \"deaths\": 5.38, \"damage\": 9869.88, \"healing\": 0.0}}, \"baptiste\": {\"games_played\": 144, \"games_won\": 79, \"games_lost\": 65, \"time_played\": 74065, \"winrate\": 54.86, \"kda\": 2.0, \"total\": {\"eliminations\": 1150, \"assists\": 122, \"deaths\": 635, \"damage\": 493510, \"healing\": 892042}, \"average\": {\"eliminations\": 9.32, \"assists\": 0.99, \"deaths\": 5.14, \"damage\": 3997.92, \"healing\": 7226.43}}, \"bastion\": {\"games_played\": 73, \"games_won\": 41, \"games_lost\": 32, \"time_played\": 40796, \"winrate\": 56.16, \"kda\": 2.66, \"total\": {\"eliminations\": 1235, \"assists\": 0, \"deaths\": 464, \"damage\": 787331, \"healing\": 2039}, \"average\": {\"eliminations\": 18.16, \"assists\": 0.0, \"deaths\": 6.82, \"damage\": 11579.53, \"healing\": 29.99}}, \"brigitte\": {\"games_played\": 30, \"games_won\": 16, \"games_lost\": 14, \"time_played\": 15803, \"winrate\": 53.33, \"kda\": 2.2, \"total\": {\"eliminations\": 317, \"assists\": 90, \"deaths\": 185, \"damage\": 121394, \"healing\": 180241}, \"average\": {\"eliminations\": 12.04, \"assists\": 3.42, \"deaths\": 7.02, \"damage\": 4609.02, \"healing\": 6843.3}}, \"cassidy\": {\"games_played\": 203, \"games_won\": 112, \"games_lost\": 91, \"time_played\": 102331, \"winrate\": 55.17, \"kda\": 2.66, \"total\": {\"eliminations\": 2926, \"assists\": 0, \"deaths\": 1099, \"damage\": 1518364, \"healing\": 502}, \"average\": {\"eliminations\": 17.16, \"assists\": 0.0, \"deaths\": 6.44, \"damage\": 8902.66, \"healing\": 2.94}}, \"dva\": {\"games_played\": 56, \"games_won\": 25, \"games_lost\": 31, \"time_played\": 26275, \"winrate\": 44.64, \"kda\": 4.53, \"total\": {\"eliminations\": 833, \"assists\": 0, \"deaths\": 184, \"damage\": 451180, \"healing\": 672}, \"average\": {\"eliminations\": 19.02, \"assists\": 0.0, \"deaths\": 4.2, \"damage\": 10302.87, \"healing\": 15.35}}, \"doomfist\": {\"games_played\": 523, \"games_won\": 250, \"games_lost\": 273, \"time_played\": 277471, \"winrate\": 47.8, \"kda\": 2.87, \"total\": {\"eliminations\": 7780, \"assists\": 0, \"deaths\": 2715, \"damage\": 4454261, \"healing\": 141772}, \"average\": {\"eliminations\": 16.82, \"assists\": 0.0, \"deaths\": 5.87, \"damage\": 9631.84, \"healing\": 306.57}}, \"echo\": {\"games_played\": 48, \"games_won\": 22, \"games_lost\": 26, \"time_played\": 23914, \"winrate\": 45.83, \"kda\": 2.94, \"total\": {\"eliminations\": 686, \"assists\": 0, \"deaths\": 233, \"damage\": 377651, \"healing\": 3768}, \"average\": {\"eliminations\": 17.21, \"assists\": 0.0, \"deaths\": 5.85, \"damage\": 9475.23, \"healing\": 94.54}}, \"freja\": {\"games_played\": 2, \"games_won\": 1, \"games_lost\": 1, \"time_played\": 1197, \"winrate\": 50.0, \"kda\": 2.0, \"total\": {\"eliminations\": 30, \"assists\": 0, \"deaths\": 15, \"damage\": 18506, \"healing\": 316}, \"average\": {\"eliminations\": 15.04, \"assists\": 0.0, \"deaths\": 7.52, \"damage\": 9276.19, \"healing\": 158.4}}, \"genji\": {\"games_played\": 45, \"games_won\": 20, \"games_lost\": 25, \"time_played\": 23073, \"winrate\": 44.44, \"kda\": 2.7, \"total\": {\"eliminations\": 599, \"assists\": 0, \"deaths\": 222, \"damage\": 301201, \"healing\": 7316}, \"average\": {\"eliminations\": 15.58, \"assists\": 0.0, \"deaths\": 5.77, \"damage\": 7832.56, \"healing\": 190.25}}, \"hazard\": {\"games_played\": 14, \"games_won\": 5, \"games_lost\": 9, \"time_played\": 7660, \"winrate\": 35.71, \"kda\": 2.46, \"total\": {\"eliminations\": 199, \"assists\": 0, \"deaths\": 81, \"damage\": 246173, \"healing\": 890}, \"average\": {\"eliminations\": 15.59, \"assists\": 0.0, \"deaths\": 6.34, \"damage\": 19282.48, \"healing\": 69.71}}, \"hanzo\": {\"games_played\": 11, \"games_won\": 5, \"games_lost\": 6, \"time_played\": 5084, \"winrate\": 45.45, \"kda\": 2.27, \"total\": {\"eliminations\": 111, \"assists\": 0, \"deaths\": 49, \"damage\": 68897, \"healing\": 0}, \"average\": {\"eliminations\": 13.1, \"assists\": 0.0, \"deaths\": 5.78, \"damage\": 8131.04, \"healing\": 0.0}}, \"illari\": {\"games_played\": 77, \"games_won\": 46, \"games_lost\": 31, \"time_played\": 40876, \"winrate\": 59.74, \"kda\": 3.42, \"total\": {\"eliminations\": 983, \"assists\": 178, \"deaths\": 339, \"damage\": 459821, \"healing\": 503486}, \"average\": {\"eliminations\": 14.43, \"assists\": 2.61, \"deaths\": 4.98, \"damage\": 6749.5, \"healing\": 7390.44}}, \"junker-queen\": {\"games_played\": 59, \"games_won\": 27, \"games_lost\": 32, \"time_played\": 32896, \"winrate\": 45.76, \"kda\": 2.82, \"total\": {\"eliminations\": 950, \"assists\": 0, \"deaths\": 337, \"damage\": 583124, \"healing\": 138406}, \"average\": {\"eliminations\": 17.33, \"assists\": 0.0, \"deaths\": 6.15, \"damage\": 10635.77, \"healing\": 2524.43}}, \"junkrat\": {\"games_played\": 289, \"games_won\": 162, \"games_lost\": 127, \"time_played\": 143382, \"winrate\": 56.06, \"kda\": 3.52, \"total\": {\"eliminations\": 3863, \"assists\": 662, \"deaths\": 1284, \"damage\": 2415031, \"healing\": 0}, \"average\": {\"eliminations\": 16.17, \"assists\": 2.77, \"deaths\": 5.37, \"damage\": 10106.0, \"healing\": 0.0}}, \"juno\": {\"games_played\": 18, \"games_won\": 10, \"games_lost\": 8, \"time_played\": 8639, \"winrate\": 55.56, \"kda\": 4.3, \"total\": {\"eliminations\": 202, \"assists\": 0, \"deaths\": 47, \"damage\": 70449, \"healing\": 109178}, \"average\": {\"eliminations\": 14.03, \"assists\": 0.0, \"deaths\": 3.26, \"damage\": 4892.86, \"healing\": 7582.68}}, \"kiriko\": {\"games_played\": 96, \"games_won\": 45, \"games_lost\": 51, \"time_played\": 50401, \"winrate\": 46.88, \"kda\": 2.34, \"total\": {\"eliminations\": 668, \"assists\": 356, \"deaths\": 437, \"damage\": 278152, \"healing\": 637203}, \"average\": {\"eliminations\": 7.95, \"assists\": 4.24, \"deaths\": 5.2, \"damage\": 3311.27, \"healing\": 7585.6}}, \"lifeweaver\": {\"games_played\": 118, \"games_won\": 55, \"games_lost\": 63, \"time_played\": 52756, \"winrate\": 46.61, \"kda\": 1.31, \"total\": {\"eliminations\": 677, \"assists\": 0, \"deaths\": 518, \"damage\": 224583, \"healing\": 722221}, \"average\": {\"eliminations\": 7.7, \"assists\": 0.0, \"deaths\": 5.89, \"damage\": 2554.21, \"healing\": 8213.9}}, \"lucio\": {\"games_played\": 332, \"games_won\": 195, \"games_lost\": 137, \"time_played\": 174412, \"winrate\": 58.73, \"kda\": 3.4, \"total\": {\"eliminations\": 3854, \"assists\": 1924, \"deaths\": 1700, \"damage\": 1382293, \"healing\": 2056103}, \"average\": {\"eliminations\": 13.26, \"assists\": 6.62, \"deaths\": 5.85, \"damage\": 4755.27, \"healing\": 7073.26}}, \"mauga\": {\"games_played\": 121, \"games_won\": 63, \"games_lost\": 58, \"time_played\": 63141, \"winrate\": 52.07, \"kda\": 4.32, \"total\": {\"eliminations\": 1991, \"assists\": 722, \"deaths\": 628, \"damage\": 1318574, \"healing\": 167829}, \"average\": {\"eliminations\": 18.92, \"assists\": 6.86, \"deaths\": 5.97, \"damage\": 12529.8, \"healing\": 1594.8}}, \"mei\": {\"games_played\": 63, \"games_won\": 39, \"games_lost\": 24, \"time_played\": 32907, \"winrate\": 61.9, \"kda\": 4.2, \"total\": {\"eliminations\": 902, \"assists\": 340, \"deaths\": 296, \"damage\": 1489523, \"healing\": 60522}, \"average\": {\"eliminations\": 16.45, \"assists\": 6.2, \"deaths\": 5.4, \"damage\": 27158.77, \"healing\": 1103.51}}, \"mercy\": {\"games_played\": 168, \"games_won\": 97, \"games_lost\": 71, \"time_played\": 87212, \"winrate\": 57.74, \"kda\": 1.07, \"total\": {\"eliminations\": 317, \"assists\": 580, \"deaths\": 836, \"damage\": 84970, \"healing\": 1414885}, \"average\": {\"eliminations\": 2.18, \"assists\": 3.99, \"deaths\": 5.75, \"damage\": 584.58, \"healing\": 9734.11}}, \"moira\": {\"games_played\": 67, \"games_won\": 34, \"games_lost\": 33, \"time_played\": 33542, \"winrate\": 50.75, \"kda\": 3.8, \"total\": {\"eliminations\": 1082, \"assists\": 0, \"deaths\": 285, \"damage\": 351201, \"healing\": 419700}, \"average\": {\"eliminations\": 19.35, \"assists\": 0.0, \"deaths\": 5.1, \"damage\": 6282.29, \"healing\": 7507.6}}, \"orisa\": {\"games_played\": 139, \"games_won\": 68, \"games_lost\": 71, \"time_played\": 70711, \"winrate\": 48.92, \"kda\": 3.18, \"total\": {\"eliminations\": 2078, \"assists\": 576, \"deaths\": 834, \"damage\": 1414369, \"healing\": 0}, \"average\": {\"eliminations\": 17.63, \"assists\": 4.89, \"deaths\": 7.08, \"damage\": 12001.26, \"healing\": 0.0}}, \"pharah\": {\"games_played\": 64, \"games_won\": 39, \"games_lost\": 25, \"time_played\": 33325, \"winrate\": 60.94, \"kda\": 3.22, \"total\": {\"eliminations\": 1051, \"assists\": 0, \"deaths\": 326, \"damage\": 632185, \"healing\": 0}, \"average\": {\"eliminations\": 18.92, \"assists\": 0.0, \"deaths\": 5.87, \"damage\": 11382.18, \"healing\": 0.0}}, \"ramattra\": {\"games_played\": 134, \"games_won\": 79, \"games_lost\": 55, \"time_played\": 67939, \"winrate\": 58.96, \"kda\": 4.36, \"total\": {\"eliminations\": 2154, \"assists\": 359, \"deaths\": 576, \"damage\": 1292245, \"healing\": 28566}, \"average\": {\"eliminations\": 19.02, \"assists\": 3.17, \"deaths\": 5.09, \"damage\": 11412.4, \"healing\": 252.28}}, \"reaper\": {\"games_played\": 91, \"games_won\": 59, \"games_lost\": 32, \"time_played\": 45982, \"winrate\": 64.84, \"kda\": 4.12, \"total\": {\"eliminations\": 1678, \"assists\": 0, \"deaths\": 407, \"damage\": 693775, \"healing\": 108286}, \"average\": {\"eliminations\": 21.9, \"assists\": 0.0, \"deaths\": 5.31, \"damage\": 9052.78, \"healing\": 1412.98}}, \"reinhardt\": {\"games_played\": 229, \"games_won\": 138, \"games_lost\": 91, \"time_played\": 125414, \"winrate\": 60.26, \"kda\": 2.78, \"total\": {\"eliminations\": 3447, \"assists\": 294, \"deaths\": 1345, \"damage\": 1840130, \"healing\": 0}, \"average\": {\"eliminations\": 16.49, \"assists\": 1.41, \"deaths\": 6.43, \"damage\": 8803.47, \"healing\": 0.0}}, \"roadhog\": {\"games_played\": 60, \"games_won\": 22, \"games_lost\": 38, \"time_played\": 31618, \"winrate\": 36.67, \"kda\": 3.15, \"total\": {\"eliminations\": 822, \"assists\": 253, \"deaths\": 341, \"damage\": 513890, \"healing\": 378316}, \"average\": {\"eliminations\": 15.6, \"assists\": 4.8, \"deaths\": 6.47, \"damage\": 9751.85, \"healing\": 7179.13}}, \"sigma\": {\"games_played\": 163, \"games_won\": 102, \"games_lost\": 61, \"time_played\": 78753, \"winrate\": 62.58, \"kda\": 3.98, \"total\": {\"eliminations\": 2327, \"assists\": 326, \"deaths\": 667, \"damage\": 1481556, \"healing\": 0}, \"average\": {\"eliminations\": 17.73, \"assists\": 2.48, \"deaths\": 5.08, \"damage\": 11287.62, \"healing\": 0.0}}, \"sojourn\": {\"games_played\": 61, \"games_won\": 23, \"games_lost\": 38, \"time_played\": 32328, \"winrate\": 37.7, \"kda\": 2.49, \"total\": {\"eliminations\": 808, \"assists\": 0, \"deaths\": 324, \"damage\": 552018, \"healing\": 0}, \"average\": {\"eliminations\": 15.0, \"assists\": 0.0, \"deaths\": 6.01, \"damage\": 10245.32, \"healing\": 0.0}}, \"soldier-76\": {\"games_played\": 72, \"games_won\": 40, \"games_lost\": 32, \"time_played\": 37480, \"winrate\": 55.56, \"kda\": 2.96, \"total\": {\"eliminations\": 1078, \"assists\": 0, \"deaths\": 364, \"damage\": 590581, \"healing\": 101703}, \"average\": {\"eliminations\": 17.26, \"assists\": 0.0, \"deaths\": 5.83, \"damage\": 9454.34, \"healing\": 1628.12}}, \"sombra\": {\"games_played\": 12, \"games_won\": 4, \"games_lost\": 8, \"time_played\": 6327, \"winrate\": 33.33, \"kda\": 3.61, \"total\": {\"eliminations\": 143, \"assists\": 63, \"deaths\": 57, \"damage\": 60850, \"healing\": 2761}, \"average\": {\"eliminations\": 13.56, \"assists\": 5.97, \"deaths\": 5.41, \"damage\": 5770.51, \"healing\": 261.83}}, \"symmetra\": {\"games_played\": 14, \"games_won\": 9, \"games_lost\": 5, \"time_played\": 7189, \"winrate\": 64.29, \"kda\": 3.88, \"total\": {\"eliminations\": 248, \"assists\": 0, \"deaths\": 64, \"damage\": 110708, \"healing\": 2290}, \"average\": {\"eliminations\": 20.7, \"assists\": 0.0, \"deaths\": 5.34, \"damage\": 9239.78, \"healing\": 191.13}}, \"torbjorn\": {\"games_played\": 5, \"games_won\": 5, \"games_lost\": 0, \"time_played\": 3310, \"winrate\": 100.0, \"kda\": 3.11, \"total\": {\"eliminations\": 87, \"assists\": 0, \"deaths\": 28, \"damage\": 54534, \"healing\": 0}, \"average\": {\"eliminations\": 15.77, \"assists\": 0.0, \"deaths\": 5.08, \"damage\": 9885.32, \"healing\": 0.0}}, \"tracer\": {\"games_played\": 22, \"games_won\": 8, \"games_lost\": 14, \"time_played\": 10943, \"winrate\": 36.36, \"kda\": 2.08, \"total\": {\"eliminations\": 271, \"assists\": 0, \"deaths\": 130, \"damage\": 115484, \"healing\": 0}, \"average\": {\"eliminations\": 14.86, \"assists\": 0.0, \"deaths\": 7.13, \"damage\": 6331.94, \"healing\": 0.0}}, \"venture\": {\"games_played\": 46, \"games_won\": 25, \"games_lost\": 21, \"time_played\": 23628, \"winrate\": 54.35, \"kda\": 3.78, \"total\": {\"eliminations\": 749, \"assists\": 0, \"deaths\": 198, \"damage\": 349609, \"healing\": 0}, \"average\": {\"eliminations\": 19.02, \"assists\": 0.0, \"deaths\": 5.03, \"damage\": 8877.83, \"healing\": 0.0}}, \"widowmaker\": {\"games_played\": 36, \"games_won\": 14, \"games_lost\": 22, \"time_played\": 17342, \"winrate\": 38.89, \"kda\": 1.77, \"total\": {\"eliminations\": 304, \"assists\": 0, \"deaths\": 172, \"damage\": 163288, \"healing\": 0}, \"average\": {\"eliminations\": 10.52, \"assists\": 0.0, \"deaths\": 5.95, \"damage\": 5649.45, \"healing\": 0.0}}, \"winston\": {\"games_played\": 83, \"games_won\": 39, \"games_lost\": 44, \"time_played\": 43134, \"winrate\": 46.99, \"kda\": 3.08, \"total\": {\"eliminations\": 1329, \"assists\": 0, \"deaths\": 432, \"damage\": 631476, \"healing\": 2953}, \"average\": {\"eliminations\": 18.49, \"assists\": 0.0, \"deaths\": 6.01, \"damage\": 8783.92, \"healing\": 41.08}}, \"wrecking-ball\": {\"games_played\": 18, \"games_won\": 9, \"games_lost\": 9, \"time_played\": 9566, \"winrate\": 50.0, \"kda\": 2.37, \"total\": {\"eliminations\": 180, \"assists\": 0, \"deaths\": 76, \"damage\": 109048, \"healing\": 886}, \"average\": {\"eliminations\": 11.29, \"assists\": 0.0, \"deaths\": 4.77, \"damage\": 6839.72, \"healing\": 55.57}}, \"zarya\": {\"games_played\": 100, \"games_won\": 54, \"games_lost\": 46, \"time_played\": 51335, \"winrate\": 54.0, \"kda\": 3.74, \"total\": {\"eliminations\": 1556, \"assists\": 175, \"deaths\": 463, \"damage\": 936350, \"healing\": 0}, \"average\": {\"eliminations\": 18.19, \"assists\": 2.05, \"deaths\": 5.41, \"damage\": 10944.0, \"healing\": 0.0}}, \"zenyatta\": {\"games_played\": 105, \"games_won\": 58, \"games_lost\": 47, \"time_played\": 52328, \"winrate\": 55.24, \"kda\": 3.83, \"total\": {\"eliminations\": 1210, \"assists\": 757, \"deaths\": 514, \"damage\": 565438, \"healing\": 565897}, \"average\": {\"eliminations\": 13.87, \"assists\": 8.68, \"deaths\": 5.89, \"damage\": 6483.39, \"healing\": 6488.65}}}}}"}]}}}
